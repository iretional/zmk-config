/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        td_par: tap_dance_par {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_PAR";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LPAR>, <&kp RPAR>;
        };
        
        td_bt1: tap_dance_esc_bootloader {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_ESC_BOOTLOADER";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp ESC>, <&kp ESC>, <&kp ESC>, <&bootloader>;
        };

        td_bt2: tap_dance_lang2_bootloader {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_LANG1_BOOTLOADER";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LANG2>, <&kp LANG2>, <&kp LANG2>, <&bootloader>;
        };
    };

    macros {
        zed_capt: zed_capt {
            label = "zed_capt";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_press &kp LGUI>
                , <&macro_tap &kp S>
                , <&macro_release &kp LSHFT>
                , <&macro_release &kp LGUI>
                ;
        };
    };
    
    conditional_layers {
    compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
// -----------------------------------------------------------------------------------------
// |  `   |  1  |  2  |  3  |  4  |  5  |                           |  6  |  7  |  8  |  9  |  0  |  -   |
// |  TAB |  Q  |  W  |  E  |  R  |  T  |                           |  Y  |  U  |  I  |  O  |  P  |  =   |
// | CAPS |  A  |  S  |  D  |  F  |  G  |                           |  H  |  J  |  K  |  L  |  ;  |  "   |
// | CTRL | ALT |  Z  |  X  |  C  |  V  | LWR | CTRL|   | RSE | RSE |  B  |  N  |  M  |  .  |  /  | LANG |
//              | WIN | SFT | SPC | BSP | ALT |               |  ?  | ETR | SPC | SFT |  ,  |
            bindings = <
   &kp GRAVE &kp N1    &kp N2    &kp N3    &kp N4    &kp N5                                                         &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &kp MINUS
   &kp TAB   &kp Q     &kp W     &kp E     &kp R     &kp T                                                          &kp Y     &kp U     &kp I     &kp O     &kp P     &kp EQUAL
   &kp CAPS  &kp A     &kp S     &kp D     &kp F     &kp G                                                          &kp H     &kp J     &kp K     &kp L     &kp SEMI  &kp SQT
   &kp LCTRL &kp LALT  &kp Z     &kp X     &kp C     &kp V     &mo 1     &kp LCTRL             &kp BSLH   &mo 2     &kp B     &kp N     &kp M     &kp DOT   &kp FSLH  &kp N1
                       &kp LGUI  &kp LSHFT &kp SPACE &kp BSPC  &kp LALT                                   &kp LANG1 &kp RET   &kp SPACE &kp RSHFT &kp COMMA 
            >;
        };

        lower_layer {
// -----------------------------------------------------------------------------------------
// |  `   |  1  |  2  |  3  |  4  |  5  |                           |  6  |  7  |  8  |  9  |  0  |  -   |
// |  TAB |  Q  |  W  |  E  |  R  |  T  |                           |  Y  |  U  |  I  |  O  |  P  |  =   |
// | CAPS |  A  |  S  |  D  |  F  |  G  |                           |  H  |  J  |  K  |  L  |  ;  |  "   |
// | CTRL | ALT |  Z  |  X  |  C  |  V  | LWR | CTRL|   | RSE | RSE |  B  |  N  |  M  |  .  |  /  | LANG |
//              | WIN | SFT | SPC | BSP | ALT |               |  ?  | ETR | SPC | SFT |  ,  |
            bindings = <
   &kp ESC   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_CLR &kp LPAR                                                &kp RPAR  &kp KP_N7 &kp KP_N8 &kp KP_N9  &td_par      &kp KP_MINUS
   &kp TAB   &trans       &kp HOME     &kp UP       &kp END    &kp LBRC                                                &kp RBRC  &kp KP_N4 &kp KP_N5 &kp KP_N6  &kp KP_PLUS  &kp EQUAL
   &kp CAPS  &trans       &kp LEFT     &kp DOWN     &kp RIGHT  &kp LBKT                                                &kp RBKT  &kp KP_N1 &kp KP_N2 &kp KP_N3  &kp KP_SLASH &kp KP_MULTIPLY
   &kp LCTRL &kp LALT     &trans       &trans       &trans     &kp LT    &trans    &kp LCTRL      &kp KP_NUM &trans    &kp GT    &kp KP_N0 &kp KP_N0 &kp KP_DOT &kp BSLH     &trans
                          &kp LGUI     &kp LSHFT    &kp SPACE  &kp DEL   &kp LALT                            &kp LANG2 &kp RET   &kp SPACE &kp RSHFT &kp KP_COMMA 
            >;
        };

        raise_layer {
// -----------------------------------------------------------------------------------------
// |  `   |  1  |  2  |  3  |  4  |  5  |                           |  6  |  7  |  8  |  9  |  0  |  -   |
// |  TAB |  Q  |  W  |  E  |  R  |  T  |                           |  Y  |  U  |  I  |  O  |  P  |  =   |
// | CAPS |  A  |  S  |  D  |  F  |  G  |                           |  H  |  J  |  K  |  L  |  ;  |  "   |
// | CTRL | ALT |  Z  |  X  |  C  |  V  | LWR | CTRL|   | RSE | RSE |  B  |  N  |  M  |  .  |  /  | LANG |
//              | WIN | SFT | SPC | BSP | ALT |               |  ?  | ETR | SPC | SFT |  ,  |
                bindings = <
   &kp ESC   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_CLR &kp LPAR                                                &kp RPAR  &kp KP_N7 &kp KP_N8 &kp KP_N9  &td_par      &kp KP_MINUS
   &kp TAB   &trans       &kp HOME     &kp UP       &kp END    &kp LBRC                                                &kp RBRC  &kp KP_N4 &kp KP_N5 &kp KP_N6  &kp KP_PLUS  &kp EQUAL
   &kp CAPS  &trans       &kp LEFT     &kp DOWN     &kp RIGHT  &kp LBKT                                                &kp RBKT  &kp KP_N1 &kp KP_N2 &kp KP_N3  &kp KP_SLASH &kp KP_MULTIPLY
   &kp LCTRL &kp LALT     &trans       &trans       &trans     &kp LT    &trans    &kp LCTRL      &kp KP_NUM &trans    &kp GT    &kp KP_N0 &kp KP_N0 &kp KP_DOT &kp BSLH     &trans
                          &kp LGUI     &kp LSHFT    &kp SPACE  &kp DEL   &kp LALT                            &kp LANG2 &kp RET   &kp SPACE &kp RSHFT &kp KP_COMMA 
            >;
        };

        
        then_layer {
// -----------------------------------------------------------------------------------------
// |  `   |  1  |  2  |  3  |  4  |  5  |                           |  6  |  7  |  8  |  9  |  0  |  -   |
// |  TAB |  Q  |  W  |  E  |  R  |  T  |                           |  Y  |  U  |  I  |  O  |  P  |  =   |
// | CAPS |  A  |  S  |  D  |  F  |  G  |                           |  H  |  J  |  K  |  L  |  ;  |  "   |
// | CTRL | ALT |  Z  |  X  |  C  |  V  | LWR | CTRL|   | RSE | RSE |  B  |  N  |  M  |  .  |  /  | LANG |
//              | WIN | SFT | SPC | BSP | ALT |               |  ?  | ETR | SPC | SFT |  ,  |
            bindings = <
   &kp ESC    &kp F1       &kp F2       &kp F3       &kp F4       &kp F5                                                         &kp F6    &kp F7    &kp F8    &kp F9    &kp F10   &kp F11
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                                                   &trans    &trans    &trans    &trans    &trans    &kp F12
   &trans     &trans       &trans       &trans       &trans       &trans                                                         &trans    &trans    &trans    &trans    &trans    &trans
   &trans     &trans       &trans       &trans       &trans       &trans    &trans    &trans               &trans      &trans    &trans    &trans    &trans    &trans    &trans    &trans
                           &zed_capt    &trans       &trans       &trans    &trans                                     &trans    &trans    &trans    &trans    &trans 
            >;
        };

    };
};
